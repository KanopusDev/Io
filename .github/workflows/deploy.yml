name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ "main", "master" ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy.yml'
  pull_request:
    branches: [ "main", "master" ]
    paths:
      - 'frontend/**'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Validate HTML files
        run: |
          echo "Validating HTML files..."
          find frontend -name "*.html" -exec echo "Checking {}" \;
          
      - name: Optimize assets
        run: |
          echo "Optimizing frontend assets..."
          # Create optimized build directory
          mkdir -p _site
          
          # Copy frontend files to build directory
          cp -r frontend/* _site/
          
          # Remove any development files
          find _site -name "*.md" -delete
          find _site -name "*.txt" -delete || true
          
          # Ensure all paths are relative for GitHub Pages
          find _site -name "*.html" -exec sed -i 's|http://localhost:[0-9]*|.|g' {} \;
          find _site -name "*.js" -exec sed -i 's|http://localhost:[0-9]*|.|g' {} \;
          find _site -name "*.css" -exec sed -i 's|http://localhost:[0-9]*|.|g' {} \;
          
          echo "Build complete. Contents:"
          ls -la _site/
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4